#!/bin/bash
  
  progName=$(basename $0)
  
  scriptArg="${1}" && readonly scriptArg="${scriptArg}"
  
  if [ -z "${scriptArg}" ]; then
    echo "${progName}: Argument missing" && exit 1
  fi
  
  if [ "$(/usr/bin/curl -sL -w "%{http_code}" "http://google.com/" -o /dev/null)" == "200" ]; then
    online="true"
  else
    online="false"
  fi
  
  if [ -d "/usr/local/jsssr" ]; then
    libraryExists="true"
    cDate=$(/usr/bin/stat -f%B "/usr/local/jsssr")
    thresholdTimestamp=$(/bin/date -j -v -10M +%s)
  else
    libraryExists="false"
  fi
  
  function updateLibrary() {
  
    if [ ${cDate} -lt ${thresholdTimestamp} ] || [ ! -d "/usr/local/jsssr" ]; then
  
      tmpFolder=$(getconf DARWIN_USER_CACHE_DIR) && randString=$(/usr/bin/openssl rand -hex 5) && tmpDir="${tmpFolder}${randString}" && /bin/mkdir -p "${tmpDir}"
  
      repositoryURI="https://raw.githubusercontent.com/jedetaste/jsssr/master"
  
      if [ -d "/usr/local/jsssr" ]; then
        rm -rf "/usr/local/jsssr"
        /bin/mkdir -p "/usr/local/jsssr"
      else
        /bin/mkdir -p "/usr/local/jsssr"
      fi
      
      /usr/bin/curl -sfko "${tmpDir}/index" "${repositoryURI}/index"
  
      while read line; do
        linePurged=$(echo "${line}" | sed -e 's/ /%20/g' 2>/dev/null)
        /usr/bin/curl -sfko "/usr/local/jsssr/${line}" "${repositoryURI}/Library/${linePurged}"
        /bin/chmod +x "/usr/local/jsssr/${line}"
      done < "${tmpDir}/index"
  
    fi
  
  }
  
  if [ "${online}" == "true" ] && [ ${tenMinAgoEpoch} -gt ${cDateEpoch} ]; then
    updateLibrary
  elif [ "${online}" == "true" ] && [ "${libraryExists}" == "false" ]; then
    updateLibrary
  fi
  
  if [ -s "/usr/local/jsssr/${scriptArg}" ]; then
    cd "/usr/local/jsssr" && shift && ./"${scriptArg}" "${1}" "${2}" "${3}" "${4}" "${5}" "${6}" "${7}" "${8}" "${9}" "${10}"
  else
    echo "Script '${scriptArg}' not found" && exit 1
  fi
